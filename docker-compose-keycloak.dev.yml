# services define individual containers and their configurations
services:

  # reverse proxy server
  nginx:
    restart: unless-stopped
    image: nginx:1.24.0
    container_name: nginx_server
    ports:
      - "9990:9990" # points to http port for keycloak (Note:- keycloak disables http on production)
    volumes:
      - ./nginx/keycloak/nginx.dev.conf:/etc/nginx/nginx.conf
    networks:
      - globalnet
    depends_on:
      - keycloak

  # Keycloak container
  keycloak:
    restart: unless-stopped
    image: quay.io/keycloak/keycloak:22.0.5
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: ${KC_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_ADMIN_PASSWORD}
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: false
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-postgres
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_SMTP_SERVER_EMAIL: ${KC_SMTP_SERVER_EMAIL}
      KC_SMTP_SERVER_HOST: mailhog
      KC_SMTP_SERVER_PORT: 1025
      KC_SMTP_SERVER_USER: ${KC_SMTP_SERVER_USER}
      KC_SMTP_SERVER_PASS: ${KC_SMTP_SERVER_PASS}
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm.json
    networks:
      - globalnet
    command: ["start-dev", "--auto-build", "--import-realm"]
    depends_on:
      - keycloak-postgres

  # Keycloak database container
  keycloak-postgres:
    restart: unless-stopped
    image: postgres:16
    container_name: keycloak-postgres
    volumes: 
      - ~/ridesharing/keycloak/backup:/var/lib/postgresql/data # user data will be recovered from this location on container destroy and re-create
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: ${KC_POSTGRES_USER}
      POSTGRES_PASSWORD: ${KC_POSTGRES_PASS}
    # ports:
    #   - "9992:5432" # no need to expose this port as since keycloak will access it internally
    networks:
      - globalnet
  
  # Mailhog (local mail server)
  mailhog:
    restart: unless-stopped
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025" # SMTP port
      - "8025:8025" # Web UI port
    networks:
      - globalnet
  
# volumes are a physical areas of disk space shared between the host and the containers
# volumes:

# networks define the communication rules between containers, and between a container and the host
networks:
  globalnet: # network for api communications
